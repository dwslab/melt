<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>de.uni-mannheim.informatik.dws.melt</groupId>
    <artifactId>llm-transformers</artifactId>
    <packaging>jar</packaging>
    <version>1.0</version>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        
        <oaei.mainClass>de.uni_mannheim.informatik.dws.melt.examples.llm_transformers.OLaLaForOAEI</oaei.mainClass><!-- mandatory: this class has to implement IOntologyMatchingToolBridge -->
        <oaei.copyright>(C) Mannheim, 2021</oaei.copyright> <!--optional copyright appearing in the seals descriptor file -->
        <oaei.license>GNU Lesser General Public License 2.1 or above</oaei.license> <!--optional license appearing in the seals descriptor file -->

        
        <maven.deploy.skip>true</maven.deploy.skip><!-- needed to call mvn deploy without having a distributionManagement -->
        <matching.version>3.4-SNAPSHOT</matching.version> <!-- version for all matching related packages -->
    </properties>
    
    
    <dependencies>       
        <dependency>
            <groupId>de.uni-mannheim.informatik.dws.melt</groupId>
            <artifactId>matching-ml</artifactId>
            <version>${matching.version}</version>
        </dependency>
        
        <!-- This dependency is necessary for web submission. It contains the server wrapper. -->
        <dependency>
            <groupId>de.uni-mannheim.informatik.dws.melt</groupId>
            <artifactId>receiver-http</artifactId>
            <version>${matching.version}</version>
        </dependency>
        
        <!-- contains alcomo filter -->
        <dependency>
            <groupId>de.uni-mannheim.informatik.dws.melt</groupId>
            <artifactId>matching-owlapi-matchers</artifactId>
            <version>${matching.version}</version>
        </dependency>

        <dependency>
            <groupId>de.uni-mannheim.informatik.dws.melt</groupId>
            <artifactId>matching-eval</artifactId>
            <version>${matching.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>com.github.haifengl</groupId>
                    <artifactId>smile-core</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.github.haifengl</groupId>
                    <artifactId>smile-nlp</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.gradoop.famer</groupId>
                    <artifactId>famer-clustering</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.github.universal-automata</groupId>
                    <artifactId>liblevenshtein</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.projectlombok</groupId>
                    <artifactId>lombok</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>nz.ac.waikato.cms.weka</groupId>
                    <artifactId>weka-dev</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.mapdb</groupId>
                    <artifactId>mapdb</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.github.mpkorstanje</groupId>
                    <artifactId>simmetrics-core</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>edu.mit</groupId>
                    <artifactId>jwi</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.babelscape</groupId>
                    <artifactId>babelscape-data-commons</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>net.sf.extjwnl</groupId>
                    <artifactId>extjwnl-data-wn31</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.lucene</groupId>
                    <artifactId>lucene-core</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.lucene</groupId>
                    <artifactId>lucene-queries</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.lucene</groupId>
                    <artifactId>lucene-queryparser</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.bytedeco</groupId>
                    <artifactId>openblas-platform</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>edu.stanford.nlp</groupId>
                    <artifactId>stanford-corenlp</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>it.uniroma1.lcl</groupId>
                    <artifactId>babelnet</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>it.uniroma1.lcl</groupId>
                    <artifactId>lcl-jlt</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>de.lmu.ifi.dbs.elki</groupId>
                    <artifactId>elki-clustering</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>de.lmu.ifi.dbs.elki</groupId>
                    <artifactId>elki-core-dbids-int</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>it.unimi.dsi</groupId>
                    <artifactId>fastutil</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        
        <dependency>
            <groupId>commons-cli</groupId>
            <artifactId>commons-cli</artifactId>
            <version>1.4</version>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>5.6.1</version>
            <scope>test</scope>
        </dependency>

        <!-- logging -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
            <version>2.17.1</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>2.17.1</version>
        </dependency>
        <dependency>
            <groupId>org.fusesource.jansi</groupId>
            <artifactId>jansi</artifactId>
            <version>2.4.0</version>
        </dependency>
        
    </dependencies>
    
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.0.0-M5</version>
            </plugin>
            
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.2.4</version>
                <configuration>
                    <shadedArtifactAttached>true</shadedArtifactAttached>
                    <shadedClassifierName>jar-with-dependencies</shadedClassifierName>
                    <createDependencyReducedPom>false</createDependencyReducedPom>
                    <transformers>
                        <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                            <mainClass>de.uni_mannheim.informatik.dws.melt.examples.llm_transformers.Main</mainClass>
                        </transformer>
                        <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
                    </transformers>
                  
                    <filters>
                        <filter>
                            <artifact>*:*</artifact>
                            <excludes>
                                <!-- Some jars are signed but shading breaks that. Don't include signing files. 
                                Otherwise you get: java.lang.SecurityException: Invalid signature file digest for Manifest main attributes.-->
                                <exclude>META-INF/*.SF</exclude>
                                <exclude>META-INF/*.DSA</exclude>
                                <exclude>META-INF/*.RSA</exclude>
                            </excludes>
                        </filter>
                    </filters>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            
            
             
            <!-- the following plugin will generate a docker image and save it into the target folder -->
            <!-- to work with podman instead of docker, execute (replace {dashdash} with two dashes):
            podman system service {dashdash}time=0 unix:/run/user/$(id -u)/podman/podman.sock
            and then export DOCKER_HOST="unix:/run/user/$(id -u)/podman/podman.sock"            
            https://github.com/fabric8io/docker-maven-plugin/issues/1330 -->
            <!--uncomment this if you want to build the docker image
                you also need to replace {dash}{dash}no-install-recommends with the corresponding real dashes
            
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.43.4</version>
                <configuration>
                    <images>
                        <image>
                            <name>%a-%v-web</name>
                            <build>
                                <from>nvidia/cuda:11.6.2-base-ubuntu20.04</from>
                                <runCmds>
                                    <run>apt update</run>
                                    <run>apt install default-jre python3 python3-pip python-is-python3 {dash}{dash}no-install-recommends -y</run>
                                    <run>pip install torch numpy scikit-learn pandas gensim flask "Werkzeug==2.2.3" sentencepiece "protobuf==3.20.1" accelerate bitsandbytes transformers sentence-transformers</run>
                                    <run>apt remove python3-pip -y</run>
                                    <run>rm -rf /var/lib/apt/lists/*</run>
                                </runCmds>
                                <optimise>true</optimise>
                                <assembly><descriptorRef>web</descriptorRef></assembly>
                                <cmd><shell>java -cp "${project.build.finalName}.${project.packaging}:lib/*" de.uni_mannheim.informatik.dws.melt.receiver_http.Main</shell></cmd>
                                <workdir>/maven</workdir>
                                <ports><port>8080</port></ports>
                            </build>
                        </image>
                    </images>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>de.uni-mannheim.informatik.dws.melt</groupId>
                        <artifactId>matching-assembly</artifactId>
                        <version>${matching.version}</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <goals>
                            <goal>build</goal>
                            <goal>save</goal>
                        </goals>
                        <phase>install</phase>
                    </execution>
                </executions>
            </plugin>
            -->
        </plugins>
    </build>
    
</project>