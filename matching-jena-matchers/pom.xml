<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>de.uni-mannheim.informatik.dws.melt</groupId>
        <artifactId>matching-parent</artifactId>
        <version>3.4-SNAPSHOT</version>
    </parent>
    <artifactId>matching-jena-matchers</artifactId>

    <name>MELT - Matching EvaLuation Toolkit | Jena Matchers Module</name>
    <description>Contains modularized (jena-based) matchers that can be used to quickly assemble matching systems.
    </description>

    <dependencies>

        <dependency>
            <groupId>de.uni-mannheim.informatik.dws.melt</groupId>
            <artifactId>matching-jena</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>de.uni-mannheim.informatik.dws.melt</groupId>
            <artifactId>matching-ml</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-csv</artifactId>
            <version>1.8</version>
        </dependency>
        
        <!--for multisource dispatcher incremental merge by cluster (because of the clustering algorithmns)-->
        <dependency>
            <groupId>com.github.haifengl</groupId>
            <artifactId>smile-core</artifactId>
            <version>2.6.0</version>
        </dependency>
        <!--for multisource dispatcher incremental merge by cluster text (because of tokenizer etc)-->
        <dependency>
            <groupId>com.github.haifengl</groupId>
            <artifactId>smile-nlp</artifactId>
            <version>2.6.0</version>
        </dependency>
        
        <dependency>
            <groupId>org.bytedeco</groupId>
            <artifactId>openblas-platform</artifactId>
            <version>0.3.17-1.5.6</version>
        </dependency>
        
        <dependency>
            <groupId>de.lmu.ifi.dbs.elki</groupId>
            <artifactId>elki-clustering</artifactId>
            <version>0.7.5</version>
        </dependency>
        <dependency>
            <groupId>de.lmu.ifi.dbs.elki</groupId>
            <artifactId>elki-core-dbids-int</artifactId>
            <version>0.7.5</version>
        </dependency>

        
        <dependency>
            <groupId>de.uni-mannheim.informatik.dws.melt</groupId>
            <artifactId>yet-another-alignment-api</artifactId>
            <version>${project.version}</version>
            <!--
            use exclusions as a last resort - why do we do it here?
            The main problem is that there are two versions of kryo in the classpath.
            One comes from cqengine which is used by yet-another-alignment-api and
            the other comes from famer-clustering via flink-core.
            Why does maven not detect it and use only one version?
            Because kryo changed their group id from com.esotericsoftware.kryo to com.esotericsoftware 
            (both artifactId are the same - kryo).
            Since we currently do not rely on cqengines kryo (for index persistence),
            but we need it for flink/famer to work, we exclude the dependency here. 
            
            For ANTLR we were not sure if the different runtime makes a huge difference but again
            we do not need in cqengine (which parses an SQL query which we do not do) but maybe need it for flink - who knows?
            -->
            <exclusions>
                <exclusion>
                    <groupId>com.esotericsoftware</groupId>
                    <artifactId>kryo</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.antlr</groupId>
                    <artifactId>antlr4-runtime</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- This dependency cannot be in test scope because this leads to a failure of the markdown generation
             in the CI pipeline. -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <version>${junit.version}</version>
        </dependency>

        <!--for multisource clustering (detect which links are correct) -->
        <dependency>
            <groupId>org.gradoop.famer</groupId>
            <artifactId>famer-clustering</artifactId>
            <version>0.1.0-20210414.064107-9</version>
            <!-- starting from version famer-clustering-0.1.0-20210414.064107-9
            the following path is taken:
            gradoop-flink -> flink-shaded-hadoop-2 -> zookeeper (3.4.10) -> slf4j-log4j
            thus zookeeper is using a logging implementation which is should not do.
            Thus we exclude it here
            All versions can be found here: https://git.informatik.uni-leipzig.de/dbs/FAMER/-/packages/323

            -->
            <exclusions>
                <exclusion>
                  <groupId>org.slf4j</groupId>
                  <artifactId>slf4j-log4j</artifactId>
                </exclusion>
                <exclusion>
                  <groupId>org.slf4j</groupId>
                  <artifactId>slf4j-log4j12</artifactId>
                </exclusion>
                <exclusion>
                  <groupId>log4j</groupId>
                  <artifactId>log4j</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!--dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-core</artifactId>
            <version>8.4.1</version>
        </dependency-->

        <!-- only for testing - can be removed -->
        <!--dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-queryparser</artifactId>
            <version>8.4.1</version>
        </dependency-->

        <dependency>
            <groupId>com.github.universal-automata</groupId>
            <artifactId>liblevenshtein</artifactId>
            <version>3.0.0</version>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.22</version>
        </dependency>

        <!-- testing weka -->
        <dependency>
            <groupId>nz.ac.waikato.cms.weka</groupId>
            <artifactId>weka-dev</artifactId>
            <version>3.9.5</version>
        </dependency>
        <!-- following dependency only necessary if SVM is used -->
        <!--dependency>
            <groupId>nz.ac.waikato.cms.weka</groupId>
            <artifactId>LibSVM</artifactId>
            <version>1.0.10</version>
        </dependency-->

        <!--dependency>
            <groupId>org.codelibs</groupId>
            <artifactId>ranklib</artifactId>
            <version>2.10.1</version>
        </dependency-->

        <!-- used in confidence combiner -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-math3</artifactId>
            <version>3.6.1</version>
        </dependency>

        <!-- embedded database -->
        <dependency>
            <groupId>org.mapdb</groupId>
            <artifactId>mapdb</artifactId>
            <version>3.0.8</version>
        </dependency>

        <dependency>
            <groupId>com.github.mpkorstanje</groupId>
            <artifactId>simmetrics-core</artifactId>
            <version>4.1.1</version>
        </dependency>

        <dependency>
            <groupId>org.javatuples</groupId>
            <artifactId>javatuples</artifactId>
            <version>1.2</version>
        </dependency>

        <!-- BabelNet dependency -->
        <dependency>
            <groupId>edu.mit</groupId>
            <artifactId>jwi</artifactId>
            <version>2.2.3</version>
        </dependency>


        <!-- BabelNet dependency, hosted at the University of Mannheim -->
        <dependency>
            <groupId>it.uniroma1.lcl</groupId>
            <artifactId>babelnet</artifactId>
            <version>4.0.1</version>
        </dependency>

        <!-- BabelNet dependency, hosted at the University of Mannheim -->
        <dependency>
            <groupId>it.uniroma1.lcl</groupId>
            <artifactId>lcl-jlt</artifactId>
            <version>2.4</version>
        </dependency>

        <!-- BabelNet dependency, hosted at the University of Mannheim -->
        <dependency>
            <groupId>com.babelscape</groupId>
            <artifactId>babelscape-data-commons</artifactId>
            <version>1.0</version>
        </dependency>

        <!-- BabelNet Lib Dependency -->
        <dependency>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils</artifactId>
            <version>1.9.4</version>
        </dependency>

        <!-- BabelNet Lib Dependency -->
        <dependency>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils-core</artifactId>
            <version>1.8.3</version>
        </dependency>

        <!-- BabelNet Lib Dependency -->
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>1.8</version>
        </dependency>

        <!-- BabelNet Lib Dependency -->
        <dependency>
            <groupId>commons-collections</groupId>
            <artifactId>commons-collections</artifactId>
            <version>3.2.2</version>
        </dependency>

        <!-- BabelNet Lib Dependency -->
        <dependency>
            <groupId>commons-configuration</groupId>
            <artifactId>commons-configuration</artifactId>
            <version>1.5</version>
        </dependency>

        <!-- BabelNet Lib Dependency -->
        <dependency>
            <groupId>commons-digester</groupId>
            <artifactId>commons-digester</artifactId>
            <version>1.8</version>
        </dependency>

        <!-- BabelNet Lib Dependency -->
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>2.3</version>
        </dependency>

        <!-- BabelNet Lib Dependency -->
        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging-api</artifactId>
            <version>1.1</version>
        </dependency>

        <!-- BabelNet Lib Dependency -->
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.8.9</version>
        </dependency>

        <!-- BabelNet Lib Dependency -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>30.1.1-jre</version>
        </dependency>

        <!-- BabelNet Lib Dependency -->
        <dependency>
            <groupId>com.ibm.icu</groupId>
            <artifactId>icu4j</artifactId>
            <version>56.1</version>
        </dependency>

        <!-- BabelNet Lib Dependency -->
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-analyzers-common</artifactId>
            <version>7.2.0</version>
        </dependency>

        <!-- BabelNet Lib Dependency -->
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-core</artifactId>
            <version>9.4.1</version>
        </dependency>

        <!-- BabelNet Lib Dependency -->
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-queries</artifactId>
            <version>8.9.0</version>
        </dependency>

        <!-- BabelNet Lib Dependency -->
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-queryparser</artifactId>
            <version>8.8.2</version>
        </dependency>

        <!-- BabelNet Lib Dependency -->
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-sandbox</artifactId>
            <version>7.2.0</version>
        </dependency>

        <!-- Annotations for better code quality -->
        <dependency>
            <groupId>org.jetbrains</groupId>
            <artifactId>annotations</artifactId>
            <version>22.0.0</version>
        </dependency>

        <!-- main library dependency -->
        <dependency>
            <groupId>net.sf.extjwnl</groupId>
            <artifactId>extjwnl</artifactId>
            <version>2.0.3</version>
        </dependency>

        <!-- Princeton WordNet 3.1 data dependency -->
        <dependency>
            <groupId>net.sf.extjwnl</groupId>
            <artifactId>extjwnl-data-wn31</artifactId>
            <version>1.2</version>
        </dependency>

        <!-- This is also required outside tests. -->
        <dependency>
            <groupId>de.uni-mannheim.informatik.dws.melt</groupId>
            <artifactId>matching-data</artifactId>
            <version>${project.version}</version>
        </dependency>


        <!-- only for tests -->
        
        <dependency>
            <groupId>org.jgrapht</groupId>
            <artifactId>jgrapht-core</artifactId>
            <version>1.4.0</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <repositories>
        <repository>
            <id>central</id>
            <url>https://repo1.maven.org/maven2/</url>
        </repository>
        <!-- for babelnet dependencies -->
        <repository>
            <id>thirdparty</id>
            <url>https://breda.informatik.uni-mannheim.de/nexus/content/repositories/thirdparty/</url>
        </repository>
        <!-- for famer-clustering dependency -->
        <repository>
            <id>gitlab-f</id>
            <url>https://git.informatik.uni-leipzig.de/api/v4/projects/933/packages/maven</url>
        </repository>        
    </repositories>

</project>
